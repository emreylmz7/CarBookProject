@using CarBookProject.Dto.Enums
@model List<ResultReservationWithInfoDto>

<div class="col-xl-6">
    <div class="card">
        <div class="card-body">

            <h4 class="card-title">Recent Rentals</h4>
            <p class="card-subtitle mb-4 font-size-13">
                Recent Rentals from 2024
            </p>

            <div class="table-responsive">
                <table class="table table-centered table-hover table-xl mb-0" id="recent-orders">
                    <thead>
                        <tr>
                            <th class="border-top-0">Customers</th>
                            <th class="border-top-0">Pick-up Location</th>
                            <th class="border-top-0">Drop-Off Location</th>
                            <th class="border-top-0">Car Model</th>
                            <th class="border-top-0">Status</th>
                            <th class="border-top-0">Total Rent Day</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var item in Model)
                        {
                            <tr>
                                <td class="text-truncate">@item.Name</td>
                                <td class="text-truncate">@item.PickupLocation</td>
                                <td class="text-truncate">@item.DropOffLocation</td>
                                <td>
                                    <span class="badge badge-soft-secondary p-2">@item.CarName</span>
                                </td>
                                <td>
                                    <span class="badge badge-@GetStatusColor(item.Status)">@GetStatusText(item.Status)</span>
                                </td>
                                <td class="text-truncate">@item.TotalRentDay Day</td>
                            </tr>
                        }
                </table>
            </div>
        </div> 
    </div> 
</div>


@functions {
    string GetStatusColor(ReservationStatus status)
    {
        switch (status)
        {
            case ReservationStatus.Pending:
                return "warning";
            case ReservationStatus.Cancelled:
                return "danger";
            case ReservationStatus.Completed:
                return "success";
            case ReservationStatus.Confirmed:
                return "primary";
            default:
                return "secondary";
        }
    }

    string GetStatusText(ReservationStatus status)
    {
        switch (status)
        {
            case ReservationStatus.Pending:
                return "Pending";
            case ReservationStatus.Cancelled:
                return "Cancelled";
            case ReservationStatus.Completed:
                return "Completed";
            case ReservationStatus.Confirmed:
                return "Confirmed";
            default:
                return "Unknown";
        }
    }
}
